name: Publish Container

# Triggers on:
# 1. Pushes to main branch - builds development images
# 2. Version tag pushes (v*) - builds release images
on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]

jobs:
  # Run all verification steps (lint, test, build) before publishing
  verify:
    uses: ./.github/workflows/verify.yml

  publish:
    needs: verify
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      # Read Docker repository from config file to keep it consistent across the project
      - name: Read config
        id: config
        run: |
          REPO=$(jq -r '.docker.repository' config.default.json)
          echo "repository=${REPO}" >> $GITHUB_OUTPUT
      
      # Set up multi-platform build support (amd64, arm64)
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          
      # Set image tags based on the trigger:
      # - For version tags (v*): tag as both latest and specific version
      # - For main branch: tag as dev and dev-<commit-sha>
      - name: Set tags
        id: tags
        run: |
          if [[ $GITHUB_REF == refs/tags/v* ]]; then
            # For version tags, use latest and version tag
            VERSION=${GITHUB_REF#refs/tags/}
            echo "tags=${{ steps.config.outputs.repository }}/minidsp-ui:latest,${{ steps.config.outputs.repository }}/minidsp-ui:${VERSION}" >> $GITHUB_OUTPUT
          else
            # For main branch, use dev and dev-sha tags
            echo "tags=${{ steps.config.outputs.repository }}/minidsp-ui:dev,${{ steps.config.outputs.repository }}/minidsp-ui:dev-${{ github.sha }}" >> $GITHUB_OUTPUT
          fi
          
      # Build and push the image:
      # - Multi-platform build for amd64 and arm64
      # - Uses GitHub Actions cache to speed up builds
      # - Tags set in previous step
      - name: Build and push image
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          cache-from: type=gha
          cache-to: type=gha,mode=max
          tags: ${{ steps.tags.outputs.tags }}
          
      # Create a GitHub release when pushing a version tag
      # Automatically generates release notes from commits
      - name: Create GitHub Release
        if: startsWith(github.ref, 'refs/tags/v')
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false
          generate_release_notes: true 